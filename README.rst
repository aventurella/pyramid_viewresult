ViewResult Controller + View System for Pyramid
==============================================================

A Controller and View system for the `Pyramid
<http://docs.pylonshq.com/>`_ web framework.

This addon requires the `pyramid_jinja2
<http://docs.pylonsproject.org/projects/pyramid_jinja2/en/latest/`_ addon.

The Controller and View system are patterned after functionality offered
by Microsoft's MCV Framework.

For example, controller methods take keyword arguments from the matchdict.

.. code-block:: python
    from pyramid.view import view_config
    from pyramid_viewresult import Controller

    class FooController(Controller):

        @view_config(route_name='my_route')
        def action(self, arg1, arg2):
            return self.view()


The corresponding route to call **action** above would be
registered as follows:

.. code-block:: python
    config.add_route('my_route', '/zap/{arg1}/{arg2}')

The **arg1** and **arg2** matched params would be passed as arguments into
the **action** method we defined above.

It is preferred that controllers are suffixed with 'Controller'.

Additionally, a renderer is not required to be defined, one must be
explicitely returned. Note in the **action** method above, we

.. code-block:: python
    return self.view()

The **view()** method can take 2 arguments, both optional. The first argument
is the model for the view, the second is the template. If no template name is
specified, the follow rules are applied to find the template for that action.

Using the template base dir, the following paths would be searched for a
matching templates:

.. code-block:: none
    <template_base>/foo/action.html
    <template_base>/action.html

The first search path is generated by stripping the Controller suffix from the
class name and appending the default view extension, in this case **.html** to
the method name: 'action'. The second search path is simply the method name
with the default view extension.

The default view extension is initially set to 'html', however this can be
configured. To configure this extension, in your Pyramid config apply the
following:

.. code-block:: python
    config.set_viewresult_view_extension('<your ext>')


If a template name is desired to be secified, you have a few options.

.. code-block:: python
    return self.view({}, 'name')
    return self.view({}, 'name.ext')
    return self.view({}, '~/path/name.ext')
    return self.view({}, 'module:path/name.ext')
    return self.view({}, 'path/name.ext')

If the view name contains:

.. code-block:: python
    :
    /
    .
    ~/

It is assumed you are specifying the full path to the template. If only the
**name** is provided, that name will be used in place of the method name and
the default lookup paths will be applied. For example:

.. code-block:: python
    from pyramid.view import view_config
    from pyramid_viewresult import Controller

    class FooController(Controller):

        @view_config(route_name='my_route')
        def action(self, arg1, arg2):
            model = {}
            return self.view(model, 'my_view')

This will search the following locations:

.. code-block:: none
    <template_base>/foo/my_view.html
    <template_base>/my_view.html


The `pyramid_viewresult.Controller` additionally offers the following
convenience methods and attrbutes:

.. code-block:: python
    c = Controller()
    c.request  # the Pyramid request
    c.redirect_to_route  # redirect to a named route
    c.redirect  # redirect to any url
